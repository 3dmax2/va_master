#!/usr/bin/python

import sys, os, subprocess
import git
from doc_generator import driver_table_gen

def pre_commit(msg): 
    sys.stdout.write('%(yellow)s[Pre-commit]%(nocolor)s %(msg)s\n' % {
        'yellow': '\033[93m',
        'nocolor': '\033[0m',
        'msg': msg
    })

def check_diffs():

    r = git.Repo('/root/va_master')
    c = r.head.commit

    diffs = c.diff()
    pre_commit('Checking for driver changes. ')
    
    driver_diffs = [x.a_path for x in diffs if 'host_drivers' in x.a_path] 
    if driver_diffs:
        pre_commit('Found driver changes: \n' + '\n'.join(driver_diffs))
        pre_commit('Will create table. You will have to create another commit if you want to push the updated driver table. ')
        return True
    else: 
        pre_commit('Drivers seem fine. Skipping table. ')
        return False

def main():
    table_file = '/root/va_master/drivers.md' 
    pre_commit('Generating driver table at : ' + table_file)

    args = driver_table_gen.predefined()
    driver_names = args[::2]
    driver_class_names = args[1::2]

    driver_names = ['va_master.host_drivers.base'] + driver_names
    driver_class_names = ['DriverBase'] + driver_class_names

    pre_commit('Drivers with docs are : ' + ', '.join(driver_class_names))

    drivers = driver_table_gen.get_drivers(driver_names, driver_class_names)
    all_dicts = driver_table_gen.get_all_drivers_dicts(zip(drivers, driver_class_names))
    t = driver_table_gen.dicts_to_table(all_dicts, driver_class_names)
    with open(table_file, 'r+b') as f: 
        if f.read() == t: 
            pre_commit('No changes to table. ')
        else: 
            pre_commit('Drivers changed - updating table. ')
            f.write(t)
    pre_commit('Table has been generated. ')



if check_diffs(): 
    main()
