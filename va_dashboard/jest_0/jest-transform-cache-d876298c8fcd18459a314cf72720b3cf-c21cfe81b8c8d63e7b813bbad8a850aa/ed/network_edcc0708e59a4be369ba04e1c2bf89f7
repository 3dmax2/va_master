e4bee80d12f5d137d4525b636a83c178
'use strict';

module.exports = {
    get: function get(url, token, data) {
        var dfd = new $.Deferred();
        var opts = {
            type: 'GET',
            url: url
        };
        if (typeof token !== 'undefined') {
            opts.headers = { 'Authorization': 'Token ' + token };
        }
        if (typeof data !== 'undefined') {
            opts.data = data;
        }
        $.ajax(opts).done(function (data) {
            if (data.message) dfd.resolve(data.message);else dfd.resolve(data.data);
        }).fail(function (jqXHR) {
            dfd.reject(jqXHR.responseJSON.message);
        });
        return dfd.promise();
    },
    post: function post(url, token, data) {
        var dfd = new $.Deferred();
        var opts = {
            type: 'POST',
            url: url
        };

        if (typeof token !== 'undefined') {
            opts.headers = { 'Authorization': 'Token ' + token };
        }

        if (typeof data !== 'undefined') {
            opts.contentType = 'application/json';
            opts.data = JSON.stringify(data);
        }
        $.ajax(opts).done(function (data) {
            if (data.message) dfd.resolve(data.message);else dfd.resolve(data.data);
        }).fail(function (jqXHR) {
            dfd.reject(jqXHR.responseJSON.message);
        });

        return dfd.promise();
    },
    delete: function _delete(url, token, data) {
        var dfd = new $.Deferred();
        var opts = {
            type: 'DELETE',
            url: url
        };

        if (typeof token !== 'undefined') {
            opts.headers = { 'Authorization': 'Token ' + token };
        }

        if (typeof data !== 'undefined') {
            opts.contentType = 'application/json';
            opts.data = JSON.stringify(data);
        }
        $.ajax(opts).done(function (data) {
            dfd.resolve(data.data);
        }).fail(function (jqXHR) {
            dfd.reject(jqXHR.responseJSON.message);
        });

        return dfd.promise();
    },
    post_file: function post_file(url, token, data) {
        var opts = {
            type: 'POST',
            url: url,
            processData: false,
            contentType: false,
            data: data
        };

        if (typeof token !== 'undefined') {
            opts.headers = { 'Authorization': 'Token ' + token };
        }

        return $.ajax(opts);
    },
    download_file: function download_file(url, token, data) {
        var opts = {
            type: 'POST',
            url: url
        };

        if (typeof token !== 'undefined') {
            opts.headers = { 'Authorization': 'Token ' + token };
        }

        if (typeof data !== 'undefined') {
            opts.contentType = 'application/json';
            opts.data = JSON.stringify(data);
        }
        return $.ajax(opts);
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ldHdvcmsuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdldCIsInVybCIsInRva2VuIiwiZGF0YSIsImRmZCIsIiQiLCJEZWZlcnJlZCIsIm9wdHMiLCJ0eXBlIiwiaGVhZGVycyIsImFqYXgiLCJkb25lIiwibWVzc2FnZSIsInJlc29sdmUiLCJmYWlsIiwianFYSFIiLCJyZWplY3QiLCJyZXNwb25zZUpTT04iLCJwcm9taXNlIiwicG9zdCIsImNvbnRlbnRUeXBlIiwiSlNPTiIsInN0cmluZ2lmeSIsImRlbGV0ZSIsInBvc3RfZmlsZSIsInByb2Nlc3NEYXRhIiwiZG93bmxvYWRfZmlsZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBT0MsT0FBUCxHQUFpQjtBQUNiQyxTQUFLLGFBQVNDLEdBQVQsRUFBY0MsS0FBZCxFQUFxQkMsSUFBckIsRUFBMEI7QUFDM0IsWUFBSUMsTUFBTSxJQUFJQyxFQUFFQyxRQUFOLEVBQVY7QUFDQSxZQUFJQyxPQUFPO0FBQ1BDLGtCQUFNLEtBREM7QUFFUFAsaUJBQUtBO0FBRkUsU0FBWDtBQUlBLFlBQUcsT0FBT0MsS0FBUCxLQUFpQixXQUFwQixFQUFpQztBQUM3QkssaUJBQUtFLE9BQUwsR0FBZSxFQUFDLGlCQUFpQixXQUFXUCxLQUE3QixFQUFmO0FBQ0g7QUFDRCxZQUFHLE9BQU9DLElBQVAsS0FBZ0IsV0FBbkIsRUFBZ0M7QUFDNUJJLGlCQUFLSixJQUFMLEdBQVlBLElBQVo7QUFDSDtBQUNERSxVQUFFSyxJQUFGLENBQU9ILElBQVAsRUFBYUksSUFBYixDQUFrQixVQUFTUixJQUFULEVBQWM7QUFDNUIsZ0JBQUdBLEtBQUtTLE9BQVIsRUFDSVIsSUFBSVMsT0FBSixDQUFZVixLQUFLUyxPQUFqQixFQURKLEtBR0lSLElBQUlTLE9BQUosQ0FBWVYsS0FBS0EsSUFBakI7QUFDUCxTQUxELEVBS0dXLElBTEgsQ0FLUSxVQUFTQyxLQUFULEVBQWU7QUFDbkJYLGdCQUFJWSxNQUFKLENBQVdELE1BQU1F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QUFPQyxLQUFQLEtBQWlCLFdBQXBCLEVBQWlDO0FBQzdCSyxpQkFBS0UsT0FBTCxHQUFlLEVBQUMsaUJBQWlCLFdBQVdQLEtBQTdCLEVBQWY7QUFDSDs7QUFFRCxZQUFHLE9BQU9DLElBQVAsS0FBZ0IsV0FBbkIsRUFBZ0M7QUFDNUJJLGlCQUFLYSxXQUFMLEdBQW9CLGtCQUFwQjtBQUNBYixpQkFBS0osSUFBTCxHQUFZa0IsS0FBS0MsU0FBTCxDQUFlbkIsSUFBZixDQUFaO0FBQ0g7QUFDRCxlQUFPRSxFQUFFSyxJQUFGLENBQU9ILElBQVAsQ0FBUDtBQUNIO0FBdEdZLENBQWpCIiwiZmlsZSI6Im5ldHdvcmsuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXQ6IGZ1bmN0aW9uKHVybCwgdG9rZW4sIGRhdGEpe1xuICAgICAgICB2YXIgZGZkID0gbmV3ICQuRGVmZXJyZWQoKTtcbiAgICAgICAgdmFyIG9wdHMgPSB7XG4gICAgICAgICAgICB0eXBlOiAnR0VUJyxcbiAgICAgICAgICAgIHVybDogdXJsXG4gICAgICAgIH07XG4gICAgICAgIGlmKHR5cGVvZiB0b2tlbiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIG9wdHMuaGVhZGVycyA9IHsnQXV0aG9yaXphdGlvbic6ICdUb2tlbiAnICsgdG9rZW59O1xuICAgICAgICB9XG4gICAgICAgIGlmKHR5cGVvZiBkYXRhICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgb3B0cy5kYXRhID0gZGF0YTtcbiAgICAgICAgfVxuICAgICAgICAkLmFqYXgob3B0cykuZG9uZShmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgIGlmKGRhdGEubWVzc2FnZSlcbiAgICAgICAgICAgICAgICBkZmQucmVzb2x2ZShkYXRhLm1lc3NhZ2UpO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIGRmZC5yZXNvbHZlKGRhdGEuZGF0YSk7XG4gICAgICAgIH0pLmZhaWwoZnVuY3Rpb24oanFYSFIpe1xuICAgICAgICAgICAgZGZkLnJlamVjdChqcVhIUi5yZXNwb25zZUpTT04ubWVzc2FnZSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGZkLnByb21pc2UoKTtcbiAgICB9LFxuICAgIHBvc3Q6IGZ1bmN0aW9uKHVybCwgdG9rZW4sIGRhdGEpe1xuICAgICAgICB2YXIgZGZkID0gbmV3ICQuRGVmZXJyZWQoKTtcbiAgICAgICAgdmFyIG9wdHMgPSB7XG4gICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICB1cmw6IHVybFxuICAgICAgICB9O1xuXG4gICAgICAgIGlmKHR5cGVvZiB0b2tlbiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIG9wdHMuaGVhZGVycyA9IHsnQXV0aG9yaXphdGlvbic6ICdUb2tlbiAnICsgdG9rZW59O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYodHlwZW9mIGRhdGEgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBvcHRzLmNvbnRlbnRUeXBlID0gICdhcHBsaWNhdGlvbi9qc29uJztcbiAgICAgICAgICAgIG9wdHMuZGF0YSA9IEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgICAgICB9XG4gICAgICAgICQuYWpheChvcHRzKS5kb25lKGZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAgICAgaWYoZGF0YS5tZXNzYWdlKVxuICAgICAgICAgICAgICAgIGRmZC5yZXNvbHZlKGRhdGEubWVzc2FnZSk7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgZGZkLnJlc29sdmUoZGF0YS5kYXRhKTtcbiAgICAgICAgfSkuZmFpbChmdW5jdGlvbihqcVhIUil7XG4gICAgICAgICAgICBkZmQucmVqZWN0KGpxWEhSLnJlc3BvbnNlSlNPTi5tZXNzYWdlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRmZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBkZWxldGU6IGZ1bmN0aW9uKHVybCwgdG9rZW4sIGRhdGEpe1xuICAgICAgICB2YXIgZGZkID0gbmV3ICQuRGVmZXJyZWQoKTtcbiAgICAgICAgdmFyIG9wdHMgPSB7XG4gICAgICAgICAgICB0eXBlOiAnREVMRVRFJyxcbiAgICAgICAgICAgIHVybDogdXJsXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYodHlwZW9mIHRva2VuICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgb3B0cy5oZWFkZXJzID0geydBdXRob3JpemF0aW9uJzogJ1Rva2VuICcgKyB0b2tlbn07XG4gICAgICAgIH1cblxuICAgICAgICBpZih0eXBlb2YgZGF0YSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIG9wdHMuY29udGVudFR5cGUgPSAgJ2FwcGxpY2F0aW9uL2pzb24nO1xuICAgICAgICAgICAgb3B0cy5kYXRhID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgJC5hamF4KG9wdHMpLmRvbmUoZnVuY3Rpb24oZGF0YSl7XG4gICAgICAgICAgICBkZmQucmVzb2x2ZShkYXRhLmRhdGEpO1xuICAgICAgICB9KS5mYWlsKGZ1bmN0aW9uKGpxWEhSKXtcbiAgICAgICAgICAgIGRmZC5yZWplY3QoanFYSFIucmVzcG9uc2VKU09OLm1lc3NhZ2UpO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGZkLnByb21pc2UoKTtcbiAgICB9LFxuICAgIHBvc3RfZmlsZTogZnVuY3Rpb24odXJsLCB0b2tlbiwgZGF0YSl7XG4gICAgICAgIHZhciBvcHRzID0ge1xuICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICAgICAgdXJsOiB1cmwsXG4gICAgICAgICAgICBwcm9jZXNzRGF0YTogZmFsc2UsXG4gICAgICAgICAgICBjb250ZW50VHlwZTogZmFsc2UsXG4gICAgICAgICAgICBkYXRhOiBkYXRhXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYodHlwZW9mIHRva2VuICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgb3B0cy5oZWFkZXJzID0geydBdXRob3JpemF0aW9uJzogJ1Rva2VuICcgKyB0b2tlbn07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJC5hamF4KG9wdHMpO1xuICAgIH0sXG4gICAgZG93bmxvYWRfZmlsZTogZnVuY3Rpb24odXJsLCB0b2tlbiwgZGF0YSl7XG4gICAgICAgIHZhciBvcHRzID0ge1xuICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICAgICAgdXJsOiB1cmxcbiAgICAgICAgfTtcblxuICAgICAgICBpZih0eXBlb2YgdG9rZW4gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBvcHRzLmhlYWRlcnMgPSB7J0F1dGhvcml6YXRpb24nOiAnVG9rZW4gJyArIHRva2VufTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKHR5cGVvZiBkYXRhICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgb3B0cy5jb250ZW50VHlwZSA9ICAnYXBwbGljYXRpb24vanNvbic7XG4gICAgICAgICAgICBvcHRzLmRhdGEgPSBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJC5hamF4KG9wdHMpO1xuICAgIH1cbn07XG4iXX0=